Day 30 Task: Kubernetes Architecture 

 

 

 

Kubernetes Overview  

 

With the widespread adoption of containers among organizations, Kubernetes, the container-centric management software, has become a standard to deploy and operate containerized applications and is one of the most important parts of DevOps. 

Originally developed at Google and released as open-source in 2014. Kubernetes builds on 15 years of running Google's containerized workloads and the valuable contributions from the open-source community. Inspired by Google’s internal cluster management system, Borg, 

 

Tasks 

 

What is Kubernetes? Write in your own words and why do we call it k8s? 

Kubernetes is an open-source container management tool which automates container deployment, container scaling and load balancing 

It schedules, runs, and manages isolated containers which are running on virtual/physical/cloud machines. 

All top cloud providers support Kubernetes. 

Kubernetes are created using go language 

Kubernetes support Json and Yaml Scripts. 

Kubernetes is often referred to as "k8s" because "k" is the 8th letter in 	the word.  

 

What are the benefits of using k8s? 

Orchestration (clustering of any no.of containers running on diff networks) 

Auto-scaling (vertical & Horizontal) 

Auto-Healing 

Load-Balancing 

Platform independent(cloud/virtual/physical) 

Fault tolerance (Node/Pod Failure) 

Rollback (Going back to previous version) 

Health monitoring of container 

 

Explain the architecture of Kubernetes, refer to this video 

	 

We create a manifest(.yaml) and apply this to master to bring the desired state through Kubectl. 

Kubectl interact with Kube-api-server. This Kube-api-server is responsible to communicate with master and node, and spred the user request to node.  

etcd : 1]it stores metadata and status of cluster 

		    2]etcd is consistent and high available store (key-value store) 

Kube-schedular:  

		    1] when user make a request for the creation and management of pods, Kube-		          schedular is going to take action of these requests. 

		    2] A schedular watches for a newly created pods that have no node assigned 		       for every pod that the scheduler discovers, the schedular becomes 				       responsible for finding best node for that pod to run on. 

Control-Manager: Make sure that the actual state of cluster match to desired state 

Kubelet : 

		  1] kubelet manages the pods 

		  2] Agent running on the node 

		  3] Listens to Kubernetes master (e.g.:. Pod creation request) 

		  4] use port 10255 

		  5] send success/fail request to master 

Kube-proxy: 

		 1]Assign Ip to each pod 

		  2] is required to assign ip address to pods(dynamic) 

		  3] Kube-proxy runs on each node & this make sure that , each node will get its 		      own unique Ip address 

Container Engine (Docker): 

		 1] works with kubelet 

		 2] pulling docker images 

		 3] start/stop container 

		 4] Exposing containers on ports specified in manifest. 

	 

What is Control Plane? 

The control plane is an essential element of the Kubernetes cluster, and manages and controls every component of the cluster. It handles all the operations in the cluster, and its components define and control the cluster's configuration and state data. 

Write the difference between kubectl and kubelet. 

kubectl is the command-line interface (CLI) tool for working with a Kubernetes cluster. Kubelet is the technology that applies, creates, updates, and destroys containers on a Kubernetes node 

Explain the role of the API server. 

The API Server is the interface for handling, developing, and configuring Kubernetes clusters. Using the API Server, the cluster’s users, external modules, and components interact with one another. 

It communicates with other components of the control plane to maintain the desired atate of the cluster. 

 
